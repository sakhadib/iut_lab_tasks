CREATE OR REPLACE TRIGGER SAMPLE_TRIGGER
BEFORE INSERT ON SAMPLE_TABLE
FOR EACH ROW 
ENABLE
DECLARE
    v_count NUMBER;
BEGIN
    SELECT COUNT(*) INTO v_count FROM SAMPLE_TABLE;
    IF v_count > 10 THEN
        RAISE_APPLICATION_ERROR(-20001, 'Cannot insert more than 10 records');
    END IF;
END;


CREATE TRIGGER CREDITS_EARNED
AFTER UPDATE OF TAKES ON (GRADE)
REFERENCING NEW ROW AS NROW
           OLD ROW AS OROW
FOR EACH ROW
WHEN NROW.GRADE <> 'F' AND NROW.GRADE IS NOT NULL
AND (OROW.GRADE = 'F' OR OROW.GRADE IS NULL)
BEGIN ATOMIC
    UPDATE STUDENT
    SET TOT_CRED= TOT_CRED + 
    (
        SELECT CREDITS
        FROM COURSE
        WHERE COURSE.COURSE_ID= NROW.COURSE_ID
    )
    WHERE STUDENT.ID = NROW.ID;
END;



CREATE TABLE STUDENT
(
    NAME VARCHAR2(20),
    class VARCHAR2(20),
    supervisor VARCHAR2(20),
    CONSTRAINT STUDENT_PK PRIMARY KEY (NAME)
);

INSERT INTO STUDENT (NAME, CLASS, SUPERVISOR)
VALUES ('John', 'A', 'Dr. Smith');

INSERT INTO STUDENT (NAME, CLASS, SUPERVISOR)
VALUES ('Jane', 'B', 'Dr. Johnson');

INSERT INTO STUDENT (NAME, CLASS, SUPERVISOR)
VALUES ('Bob', 'A', 'Dr. Smith');

INSERT INTO STUDENT (NAME, CLASS, SUPERVISOR)
VALUES ('Alice', 'C', 'Dr. Lee');

INSERT INTO STUDENT (NAME, CLASS, SUPERVISOR)
VALUES ('Tom', 'B', 'Dr. Johnson');

INSERT INTO STUDENT (NAME, CLASS, SUPERVISOR)
VALUES ('Sara', 'A', 'Dr. Smith');

INSERT INTO STUDENT (NAME, CLASS, SUPERVISOR)
VALUES ('Mike', 'C', 'Dr. Lee');

INSERT INTO STUDENT (NAME, CLASS, SUPERVISOR)
VALUES ('Emily', 'B', 'Dr. Johnson');

INSERT INTO STUDENT (NAME, CLASS, SUPERVISOR)
VALUES ('David', 'A', 'Dr. Smith');

INSERT INTO STUDENT (NAME, CLASS, SUPERVISOR)
VALUES ('Amy', 'C', 'Dr. Lee');



