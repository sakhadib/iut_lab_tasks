Scope of Object

- local 

int calculate_age(int age_yr){
    person p = new person();
    book b = new book();    // b -> local scope
    // conversion

    if(b.name == "tautau"){
        address a = new address(Rayshad er basa);
        b.send(a);
    }
}


- block scope of Object

if-else / for / foreach / while / switch / do-while

List<book> books = new List<book>();
foreach (book b in books){
    // something
    person p = new person();
}


- Instance scop

class book{
    // properties and variables
}

class library{
    book b = new book();
}


main______

library iut_lib = new library();
iut_lib.b = new book(sadiku physics);

library buet_lib = new library();
buet_lib.b = new book(hrk physics);



- class scope

class library{
    public static book quran = new book(quran);
}

library DU_lib = new Library;

Console.Writeline(DU_lib.quran.verse);
Console.Writeline(library.quran.verse);



- caller scope

int add(int a, int b){  // caller end
    int c = a + b;
    return c;
}

book get_book(){
    book kk = new book();
    return new book();
}

int main(){
    book b = get_book();
}




## Relation is between objects. not between classes

# General Relation
___________________________
- inheritance
- association
- aggregation
- composition

# Special Relation
___________________________
- Interface
- delegation
- general dependancy


inheritance -> is a Relation

bus(child) is a vehicle(parent)
professor is a teacher


association -> Generic term for Has relation



# aggregation -> one sided love

class book{
    // properties and variables
}

class library{
    book b = new book();
}


main______

library iut_lib = new library();
iut_lib.b = new book(sadiku physics);


library has book -> association (aggregation / composition)




# composition relation (turu love)
___________________________

house has room

|-------|--------|
|       |        |
|       |        |
|-------|--------|